insert into users (id, first_name, last_name, birthday)
values (9, "Антон", "Пепеляев", "1992-07-12")
============================================

insert into users SET id=10, first_name="Никита", last_name="Петров"
============================================

insert into products (id, name, count, price)
values
(8,"iPhone 7", 1, 59990),
(9,"iPhone 8", 3, 64990),
(10,"iPhone X", 2, 79900);
============================================

update orders set status = "new" where status is NULL

============================================

delete from products where count = 0;

============================================
CREATE TABLE users2 (
 id INT,
 first_name VARCHAR(20), 
 last_name VARCHAR(50),
 birthday DATE,
 age TINYINT,
 active BOOL
 );
 INSERT INTO users2 (id, first_name, last_name, birthday, age, active)
 VALUES (1, 'Дмитрий', 'Иванов', '1986-02-18', 31, True);


============================================

create table orders (
    id INT UNSIGNED,
    product_id INT UNSIGNED,
    sale TINYINT UNSIGNED,
    amount DECIMAL(8,2)
);

insert into orders (id, product_id, sale, amount)
values
(1,245,0,230.50),
(2,17,15,999999.99),
(3,145677,21,1240.00);




============================================

create table films (
    id INT UNSIGNED,
    name VARCHAR(100),
    rating float UNSIGNED,
    CONSTRAINT rating_gte_0 CHECK (rating >= 0),
    CONSTRAINT rating_lte_10 CHECK (rating <= 10),
    country VARCHAR(2)
);

insert into films(id, name, rating, country)
values
(1,"Большая буря",3.45,"RU"),
(2,"Игра",7.5714,"US"),
(3,"Война",10.0,"RU");
============================================

create table users (
    id INT UNSIGNED,
    email VARCHAR(100),
    date_joined DATE,
    last_activity DATETIME
);

insert into users (id,email,date_joined,last_activity)
values
(1,"user1@domain.com","2014-12-12","2016-04-08 12:34:54"),
(2,"user2@domain.com","2014-12-12","2017-02-13 11:46:53"),
(3,"user3@domain.com","2014-12-13","2017-04-04 05:12:07");

============================================
create table users (
    id INT UNSIGNED NOT NULL,
	email VARCHAR(20) NOT NULL

============================================

create table articles (
    id INT UNSIGNED NOT NULL,
	name VARCHAR(80),
    text TEXT,
    state ENUM("draft","correction","public")
);

============================================
select name,price,country from products where category_id IS NOT NULL and (find_in_set("RU",country) or find_in_set("BY",country))
order by price desc


============================================
created DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
amount MEDIUMINT UNSIGNED NOT NULL DEFAULT 0,

============================================
id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT


============================================
create table passports (
    series VARCHAR(4) NOT NULL,
    number VARCHAR(6) NOT NULL,
    user_id INT UNSIGNED NOT NULL,
    date_issue DATE,
    primary key(series,number)
);

============================================
delete from orders where id in (3,4,7)


============================================
UNIQUE KEY passport (series,number)

создаем уникальный индекс
passport - имя
series,number - поля, которые не должны повторяться (два поля вместе не должны повторяться, по отдельности можно)


============================================
INDEX marks_index (mark)  - при создании таблицы

CREATE INDEX marks_index ON cars(mark) - добавление индекса (cars - таблица, mark - стобец)

CREATE UNIQUE INDEX marks_index ON cars(mark) - добавление уникального индекса (cars - таблица, mark - стобец) - зписи в колонке повторяться не могут.

DROP INDEX marks_index ON cars - удалить индекс

============================================

ALTER TABLE USERS
ADD COLUMN BIRTHDAY DATE NULL DEFAULT NULL  - добавление в таблицу новой колонки

ALTER TABLE USERS
DROP COLUMN BIRTHDAY - удаление колонки


============================================
ALTER TABLE USERS
MODIFY first_name VACHAR(50)  - меняем столбец

Каждый раз изменяя столбец нужно писать полное его описание как при создании этого стобца
============================================
ALTER TABLE USERS
change nmae name VACHAR(50) not null default '' - изменение имени столбца с nmae на name


============================================
RENAME TABLE product TO products; - переименование таблицы
rename table wp_users to blog_users, wp_posts to blog_posts, wp_comments to blog_comments - несколько таблиц разом

============================================

Сравнение строк с помощью равенства происходит без учета регистра.

Без использования доп параметров LIKE работает также как и равенство

LIKE BINARY - с учетом регистра

where name LIKE "Ю%" - отбор всех строк, где имя начинается с "Ю" (% соответствует любому количеству символов, в том числе нулю)

where name LIKE "Юр_" - отбор всех строк, где имя начинается с "Юр" и содержит в конце еще только 1 символ(_ соответствует одному символу)

============================================



============================================



============================================



============================================



============================================



============================================



============================================



============================================











